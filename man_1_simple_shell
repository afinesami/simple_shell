.TH man 1 "26 November 2019" "0.01" "simple_shell man page"
.SH NAME
.B simple_shell
- a simple command-line interpreter (shell)
	.SH SYNOPSIS
	\fB./simple_shell\fR

	\fB[NOTE]:\fR To start using, please compile following the \fICOMPILE\fR section.

	.SH COMPILE
	$ gcc -Wall -Werror -Wextra -pedantic *.c ./tests/prompt-main.c -o simple_shell

	.SH DESCRIPTION
	\fBsimple_shell\fR is a simple implementation of a command-line interpreter for the system. 

	The shell is a special user program which provides an interface to the user to use operating system services. Shell accept human readable commands from the user and convert them into something which kernel can understand.

	.B Search and Execution
	.br
	.RS 3
	There are two types of commands: builtin commands and normal programs. 
	.P
	a shell builtin is a command or a function, called from a shell, that is executed directly in the shell itself, instead of an external executable program which the shell would load and execute.
	.RE

	.B Path Search
	.br
	.RS 3
	search path is the sequence of directories in which the shell looks for commands to execute. Although some directories only contain regular files, many directories also contain executable files (either programs or commands)
	.P
	.TP
	1.
	Command names containing a slash are simply executed without performing any searches.
	.LP
	.TP
	2.
	The shell searches each entry in the PATH environment variable in turn for the command. The value of the PATH variable should be a series of entries separated by colons. Each entry consists of a directory name. The current directory may be indicated implicitly by an empty directory name, or explicitly by a single period.
	.LP
	.RE

	.B Command Exit Status
	.br
	.RS 3
	Every Linux or Unix command executed by the shell script or user has an exit status. Exit status is an integer number. 0 exit status means the command was successful without any errors. A non-zero (1-255 values) exit status means command was a failure.
	.RE

	.B Builtins
	.br
	.RS 3
	This section lists the builtin commands which are builtin because they need to perform some operation that can't be performed by a separate process.
	.P
	.TP
	alias [\fIkey\fR] [\fIvalue\fR]
	List all aliases, list a single alias, or create an alias.
	.LP
	.TP
	cd [\fIdirectory\fR]
	Switch to the specified directory.
	.LP
	.TP
	env
	Print all environment variables.
	.LP
	.TP
	printenv
	Print all environment variables.
	.LP
	.TP
	exit [\fIexitstatus\fR]
	Terminate the shell process. If \fIexitstatus\fR is given, it is used as the exit status of the shell.
	.LP
	.TP
	help [\fIpattern\fR]
	List all built-in commands if no pattern is given. Else, list any commands that match pattern.
	.LP
	.TP
	history
	List history of recent commands.
	.LP
	.TP
	setenv \fIname\fR=\fIvalue\fR
	Add a new environment variable.
	.LP
	.TP
	unsetenv \fIname\fR
	Remove an environment variable.
	.LP
	.RE

	.B Exit Status
	.br
	.RS 3
	Errors that are detected by the shell, such as a syntax error, will cause the shell to exit with a non-zero exit status.
	.RE

	.SH FILES
	.RS 3
	.TP
	.B shell.h
	Header file which contains any library includes, structs, macros/constants, and all function prototypes.
	.LP
	.TP
	.B prompt.c
	Main shell file which prints and asks for prompt from User, creates tokens from User input, and runs executable or returns response if no executable found.
	.LP
	.TP
	.B get-line.c
	Contains a rewrite of function getline and a tokenize function to split apart strings by delimiters.
	.LP
	.TP
	.B env-get-set.c
	All functions related to environment variables. Functions include ability to Get, Set, Unset, Print, Check.
	.LP
	.TP
	.B builtins.c
	Functions to handle built-in commands and checking commands via PATH.
	.LP
	.TP
	.B string-funcs.c, string-funcs2.c
	Helper functions that handle strings, include copy, compare, tokenize/parse, and concatenate.
	.LP
	.TP
	.B memory.c
	Functions to handle memory allocation and frees.
	.LP
	.TP
	.B cd.c
	Shell built-in change directory command.
	.LP
	.TP
	.B alias.c, aliasFunc.c
	Functions to handle alias built-in.
	.LP
	.TP
	.B hstry.c
	Functions to handle history built-in and storing history in an external parent directory.
	.LP
	.TP
	.B help.c
	Functions to handle help built-in.
	.LP
	.TP
	.B duplict-parse.c
	Helper function for deep duping.
	.LP
	.RE

	.SH AUTHOR
	Lafine Sami <https://github.com/afinesami>

	Mohamed Mehdi Bouchoucha <https://github.com/mmbouchoucha>
